// Width options: `mobile`, `tablet`, `small` or `large`.
@mixin responsive-block ($width) {
  @if $width == 'mobile' {
    @media only screen and (max-width: map-get($screen-breakpoints, 'mobile')) {
      @content;
    }
  }
  @else if $width == 'tablet' {
    @media only screen and (min-width: map-get($screen-breakpoints, 'mobile') + 1px)
      and (max-width: map-get($screen-breakpoints, 'tablet')) {
      @content;
    }
  }
  @else if $width == 'small' {
    @media only screen and (min-width: map-get($screen-breakpoints, 'tablet') + 1px)
      and (max-width: map-get($screen-breakpoints, 'small')) {
      @content;
    }
  }
  @else if $width == 'large' {
    @media only screen and (min-width: map-get($screen-breakpoints, 'small') + 1px) {
      @content;
    }
  }
  @else {
    @warn "Width value must be 'mobile', 'tablet', 'small' or 'large'.";
  }
}

%container {
  display: block;
  margin: 0 auto;
  padding: 0;

  @include responsive-block('mobile') {
    max-width: map-get($screen-widths, 'mobile');
  }

  @include responsive-block('tablet') {
    max-width: map-get($screen-widths, 'tablet');
  }

  @include responsive-block('small') {
    max-width: map-get($screen-widths, 'small');
  }

  @include responsive-block('large') {
    max-width: map-get($screen-widths, 'large');
  }
}
